name: build

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Lint with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt

      - name: Lint with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features

  build-non-linux:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install maturin

      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - name: Build Python package
        run: maturin build

  build-manylinux:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64, armv7, s390x, ppc64le, ppc64]
        python: [
          { version: '3.6', abi: 'cp36-cp36m' },
          { version: '3.7', abi: 'cp37-cp37m' },
          { version: '3.8', abi: 'cp38-cp38' },
          { version: '3.9', abi: 'cp39-cp39' },
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      - uses: messense/maturin-action@v1
        env:
          PYO3_CROSS_LIB_DIR: /opt/python/${{ matrix.python.abi }}/lib
        with:
          maturin-version: latest
          command: build
#          args: --release --out dist --no-sdist
          target: ${{ matrix.target }}
#          args: --release
